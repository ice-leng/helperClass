<?php
/**
 * Created by ice.leng(lengbin@geridge.com)
 * Date: 2016/1/28
 * Time: 19:59
 */

namespace lengbin\helper\excel;

/**
 * 导出处理类
 * @package lengbin\helper\excel
 */
class StandardExport implements  BaseExport
{

    private $_fileName;
    private $_objExcel;
    private $_objWriter;
    private $_objActSheet;
    private $_width  = 10;
    private $_height = 15;
    private $_style  = [];
    private $_th;
    private $_thBackGroundColor = '003396e3';
    private $_thFontIsBold  = true;
    private $_thFontColor = '00ffffff';
    private $_tdBackGroundColor = '00ecf7ff';
    private $_letter=[];
    private $_letters = [];
    private $_rules=[];
    protected $placeholder = '--';

    /**
     *
     * @param array $config $config = [
                                'width' => '24',
                                'height'=> '15',
                                'th' =>[     // td数据字段 => th 名称
                                    'attr' => '规格',
                                    'stock' => '库存',
                                    'product_price' => '供货价',
                                    'sale_price' => '平台价',
                                    'retail_price' => '建议零售价',
                                    'market_price' => '市场参考价',
                                ],
                                'style' => [
                                    'thBackGroundColor' => '003396e3',  // th 背景颜色, 默认为蓝色
                                    'thFontIsBold' => true,       // th 字体是否加粗， 默认为是
                                    'thFontColor' => '00ffffff',      // th 字体颜色， 默认为白色
                                    'tdBackGroundColor' =>['00ecf7ff','00222222'] / '00ecf7ff',   //  td 背景颜色, 默认为淡蓝色  可以是数组。 表示td 分割颜色， 字符串着为 全部颜色
                                ],
     *                          'rules' => [
                                   [], 'money'
                                ]
                            ];
     *                      颜色都是16进制
     *                      目前只有 金额 格式化
     */
    public function __construct( $config )
    {
        $this->_objExcel = new \PHPExcel();
        $this->_objWriter = new \PHPExcel_Writer_Excel5($this->_objExcel);
        $this->_objActSheet = $this->_objExcel ->getActiveSheet();
        $this->_load();
        $this->_set($config);
        $this->_set($this->_style);
    }

    private function _set( array $params ){
        foreach( $params as $key => $value ){
            $key = '_'.$key;
            $this->$key = $value;
        }
    }

    /**
     * php excel load  and set
     * @throws \PHPExcel_Exception
     * @auth ice.leng(lengbin@geridge.com)
     *
     * @issue
     */
    private function _load(){
        $objProps = $this->_objExcel->getProperties();
        $objProps->setCreator("Zeal Li");
        $objProps->setLastModifiedBy("Zeal Li");
        $objProps->setTitle("Office XLS Test Document");
        $objProps->setSubject("Office XLS Test Document, Demo");
        $objProps->setDescription("Test document, generated by PHPExcel.");
        $objProps->setKeywords("office excel PHPExcel");
        $objProps->setCategory("Test");
        $this->_objExcel->setActiveSheetIndex(0);
        $this->_objActSheet->setTitle('Sheet');
    }

    public function getObjActSheet(){
        return $this->_objActSheet;
    }

    /**
     *  获得字母
     * @auth ice.leng(lengbin@geridge.com)
     *
     * @issue
     */
    protected function getLetter( $index ){
        $str = '';
        if( $index == 0 ) return $str;
        if( isset( $this->_letters[$index] ) && !empty( $this->_letters[$index] ) ){
            return $this->_letters[$index];
        }
        if( empty($this->_letter) ){
            $this->_letter = range('A', 'Z');
        }
        $ceil = floor($index / (count($this->_letter)));
        $i    = $index % count($this->_letter);
        if( $i == 0 )  $ceil = $ceil - 1;
        if( $ceil > 0 ){
            for ( $j = 0; $j<$ceil; ++$j ){
                $str.='A';
            }
        }
        $str.= $i == 0 ? 'Z' : $this->_letter[($i-1)];
        $this->_letters[$index] = $str;
        return $str;
    }

    protected function money( $number,$decimals ){
        return sprintf("%.{$decimals}f", $number);
    }

    /**
     * 数据具体格式化
     * @param $field
     * @param $val
     * @return string
     * @throws \Exception
     * @auth ice.leng(lengbin@geridge.com)
     *
     * @issue
     */
    protected function format($rule, $val){
        switch( strtolower( $rule ) ){
            case 'money'  : $val = $this->money($val, 2); break;
            default : throw new \Exception('没有' . $rule . '此功能， 请添加！'); break;
        }
        return $val;
    }

    /**
     * 数据格式化
     * @param $field
     * @param $val
     * @return string
     * @throws \Exception
     * @auth ice.leng(lengbin@geridge.com)
     *
     * @issue
     */
    protected function fieldValidate( $field, $val ){
        foreach( $this->_rules as $rules ){
            $fields = is_array( $rules[0] ) ? $rules[0] : [ $rules[0] ];
            if( in_array( $field, $fields ) )$val = $this->format( $rules[1], $val );
        }
        return !is_null($val) ? htmlspecialchars($val) : $this->placeholder;
    }

    /**
     * @param array $data
     * @param int   $offset  偏移量（ exceil 的行数 ）
     * @auth ice.leng(lengbin@geridge.com)
     *
     * @issue
     */
    public function load($data,$offset=0)
    {
        $thVal = array_values($this->_th );
        $thKey = array_keys( $this->_th );
        // 偏移 1
        $offset = $offset + 1;
        for( $i=1; $i<=count( $thVal ); ++$i ){
            $letter = $this->getLetter($i);
            $this->_objActSheet->setCellValue($letter.$offset, $thVal[($i-1)]);
        }
        // th /  color
        $firstLetter = $this->getLetter(1);
        $lastLetter  = $this->getLetter(count( $thVal ));
        $this->_objActSheet->getStyle($firstLetter.$offset.':'.$lastLetter.$offset)->getFill()->setFillType(\PHPExcel_Style_Fill::FILL_SOLID);
        $this->_objActSheet->getStyle($firstLetter.$offset.':'.$lastLetter.$offset)->getFill()->getStartColor()->setARGB($this->_thBackGroundColor);
        $this->_objActSheet->getStyle($firstLetter.$offset.':'.$lastLetter.$offset)->getFont()->setBold($this->_thFontIsBold)->getColor()->setARGB($this->_thFontColor);
        // td / color
        $tdBackGroundColor = is_array( $this->_tdBackGroundColor ) ? $this->_tdBackGroundColor : [$this->_tdBackGroundColor];
        for( $j=1; $j<=count( $data ); ++$j ){
            $n = $j - 1;
            $index = count( $tdBackGroundColor ) > 1 ? $n % 2 : 0;
            ++$offset;
            $this->_objActSheet->getStyle($firstLetter.$offset.':'.$lastLetter.$offset)->getFill()->getStartColor()->setARGB($tdBackGroundColor[$index]);
            $this->_objActSheet->getStyle($firstLetter.$offset.':'.$lastLetter.$offset)->getFill()->setFillType(\PHPExcel_Style_Fill::FILL_SOLID);
            $d = $data[$n];
            for( $k=1; $k<=count( $thKey ); ++$k ){
                $kLetter = $this->getLetter($k);
                $key = $thKey[($k-1)];
                $val = $this->fieldValidate( $key, $d[$key] );
                $this->_objActSheet->setCellValueExplicit($kLetter.$offset, $val, \PHPExcel_Cell_DataType::TYPE_STRING2);
            }
        }
    }

    /**
     * 下载
     *
     * @auth ice.leng(lengbin@geridge.com)
     *
     * @issue
     */
    public function export(){
        $this->_objExcel->getActiveSheet()->getDefaultColumnDimension()->setWidth($this->_width);
        $this->_objExcel->getActiveSheet()->getDefaultRowDimension()->setRowHeight($this->_height);
        $fileName = ($this->_fileName ? $this->_fileName : date('Y-m-d',time())).".xls";
        ob_end_clean();
        header("Content-Type: application/force-download");
        header("Content-Type: application/octet-stream");
        header("Content-Type: application/download");
        header('Content-Disposition:inline;filename="'.$fileName.'"');
        header("Content-Transfer-Encoding: binary");
        header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
        header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
        header("Pragma: no-cache");
        $this->_objWriter->save('php://output');
        exit;
    }


}